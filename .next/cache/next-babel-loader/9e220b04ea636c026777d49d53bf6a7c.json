{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useRouter } from 'next/router';\nimport ErrorPage from 'next/error';\nimport Container from '../../components/container';\nimport PostBody from '../../components/post-body';\nimport MoreStories from '../../components/more-stories';\nimport Header from '../../components/header';\nimport PostHeader from '../../components/post-header';\nimport SectionSeparator from '../../components/section-separator';\nimport Layout from '../../components/layout';\nimport { getAllPostsWithSlug, getPostAndMorePosts } from '../../lib/api';\nimport PostTitle from '../../components/post-title';\nimport Head from 'next/head';\nimport { CMS_NAME } from '../../lib/constants';\nimport markdownToHtml from '../../lib/markdownToHtml';\nexport default function Post({\n  post,\n  morePosts,\n  preview\n}) {\n  const router = useRouter();\n\n  if (!router.isFallback && !(post === null || post === void 0 ? void 0 : post.slug)) {\n    return __jsx(ErrorPage, {\n      statusCode: 404\n    });\n  }\n\n  return __jsx(Layout, {\n    preview: preview\n  }, __jsx(Container, null, __jsx(Header, null), router.isFallback ? __jsx(PostTitle, null, \"Loading\\u2026\") : __jsx(React.Fragment, null, __jsx(\"article\", null, __jsx(Head, null, __jsx(\"title\", null, post.title, \" | Next.js Blog Example with \", CMS_NAME), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: post.ogImage.url\n  })), __jsx(PostHeader, {\n    title: post.title,\n    coverImage: post.coverImage,\n    date: post.date,\n    author: post.author\n  }), __jsx(PostBody, {\n    content: post.content\n  })), __jsx(SectionSeparator, null), morePosts.length > 0 && __jsx(MoreStories, {\n    posts: morePosts\n  }))));\n}\nexport async function getStaticProps({\n  params,\n  preview = null\n}) {\n  var _data$post;\n\n  const data = await getPostAndMorePosts(params.slug, preview);\n  const content = await markdownToHtml((data === null || data === void 0 ? void 0 : (_data$post = data.post) === null || _data$post === void 0 ? void 0 : _data$post.content) || '');\n  return {\n    props: {\n      preview,\n      post: _objectSpread({}, data === null || data === void 0 ? void 0 : data.post, {\n        content\n      }),\n      morePosts: data === null || data === void 0 ? void 0 : data.morePosts\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const allPosts = await getAllPostsWithSlug();\n  return {\n    paths: (allPosts === null || allPosts === void 0 ? void 0 : allPosts.map(post => `/posts/${post.slug}`)) || [],\n    fallback: true\n  };\n}","map":null,"metadata":{},"sourceType":"module"}