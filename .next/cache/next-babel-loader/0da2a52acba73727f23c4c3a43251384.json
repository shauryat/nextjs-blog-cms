{"ast":null,"code":"import 'isomorphic-unfetch';\nconst API_URL = 'https://graphql.datocms.com';\nconst API_TOKEN = process.env.NEXT_EXAMPLE_CMS_DATOCMS_API_TOKEN; // See: https://www.datocms.com/blog/offer-responsive-progressive-lqip-images-in-2020\n\nconst responsiveImageFragment = `\n  fragment responsiveImageFragment on ResponsiveImage {\n  srcSet\n    webpSrcSet\n    sizes\n    src\n    width\n    height\n    aspectRatio\n    alt\n    title\n    bgColor\n    base64\n  }\n`;\n\nasync function fetchAPI(query, {\n  variables,\n  preview\n} = {}) {\n  const res = await fetch(API_URL + (preview ? '/preview' : ''), {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${API_TOKEN}`\n    },\n    body: JSON.stringify({\n      query,\n      variables\n    })\n  });\n  const json = await res.json();\n\n  if (json.errors) {\n    console.error(json.errors);\n    throw new Error('Failed to fetch API');\n  }\n\n  return json.data;\n}\n\nexport async function getPreviewPostBySlug(slug) {\n  const data = await fetchAPI(`\n    query PostBySlug($slug: String) {\n      post(filter: {slug: {eq: $slug}}) {\n        slug\n      }\n    }`, {\n    preview: true,\n    variables: {\n      slug\n    }\n  });\n  return data === null || data === void 0 ? void 0 : data.post;\n}\nexport async function getAllPostsWithSlug() {\n  const data = fetchAPI(`\n    {\n      allPosts {\n        slug\n      }\n    }\n  `);\n  return data === null || data === void 0 ? void 0 : data.allPosts;\n}\nexport async function getAllPostsForHome(preview) {\n  const data = await fetchAPI(`\n    {\n      allPosts(orderBy: date_DESC, first: 20) {\n        title\n        slug\n        excerpt\n        date\n        coverImage {\n          responsiveImage(imgixParams: {fm: jpg, fit: crop, w: 2000, h: 1000 }) {\n            ...responsiveImageFragment\n          }\n        }\n        author {\n          name\n          picture {\n            url(imgixParams: {fm: jpg, fit: crop, w: 100, h: 100, sat: -100})\n          }\n        }\n      }\n    }\n\n    ${responsiveImageFragment}\n  `, {\n    preview\n  });\n  return data === null || data === void 0 ? void 0 : data.allPosts;\n}\nexport async function getPostAndMorePosts(slug, preview) {\n  const data = await fetchAPI(`\n  query PostBySlug($slug: String) {\n    post(filter: {slug: {eq: $slug}}) {\n      title\n      slug\n      content\n      date\n      ogImage: coverImage{\n        url(imgixParams: {fm: jpg, fit: crop, w: 2000, h: 1000 })\n      }\n      coverImage {\n        responsiveImage(imgixParams: {fm: jpg, fit: crop, w: 2000, h: 1000 }) {\n          ...responsiveImageFragment\n        }\n      }\n      author {\n        name\n        picture {\n          url(imgixParams: {fm: jpg, fit: crop, w: 100, h: 100, sat: -100})\n        }\n      }\n    }\n\n    morePosts: allPosts(orderBy: date_DESC, first: 2, filter: {slug: {neq: $slug}}) {\n      title\n      slug\n      excerpt\n      date\n      coverImage {\n        responsiveImage(imgixParams: {fm: jpg, fit: crop, w: 2000, h: 1000 }) {\n          ...responsiveImageFragment\n        }\n      }\n      author {\n        name\n        picture {\n          url(imgixParams: {fm: jpg, fit: crop, w: 100, h: 100, sat: -100})\n        }\n      }\n    }\n  }\n\n  ${responsiveImageFragment}\n  `, {\n    preview,\n    variables: {\n      slug\n    }\n  });\n  return data;\n}","map":null,"metadata":{},"sourceType":"module"}